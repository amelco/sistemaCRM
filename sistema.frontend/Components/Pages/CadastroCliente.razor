@page "/cadastro-cliente"
@using BlazorBootstrap
@using Microsoft.AspNetCore.Components.Forms
@using sistema.frontend.Models
@using sistema.frontend.Services
@inject ClienteApiService ClienteApiService

<h2>Cadastro de Cliente</h2>
<div class="form-wrapper">
    <EditForm Model="@novoCliente" OnValidSubmit="@SalvarCliente" FormName="CadastroClienteForm">
        <div class="form-group">
            <label for="nome"></label>
            <InputText id="nome" class="form-control" @bind-Value="novoCliente.Nome" placeholder="Nome completo" />
        </div>

        <div class="form-group">
            <label for="idade"></label>
            <InputNumber id="idade" class="form-control" @bind-Value="novoCliente.Idade" placeholder="Idade" />
        </div>

        <div class="form-group">
            <label for="email"></label>
            <InputText id="email" class="form-control" @bind-Value="novoCliente.Email" placeholder="Email" />
        </div>

        <div class="form-group">
            <label for="telefone"></label>
            <InputText id="telefone" class="form-control" @bind-Value="novoCliente.Telefone" placeholder="Telefone" />
        </div>

        <div class="form-group">
            <CurrencyInput Mask="currency" TValue="decimal" @bind-Value="novoCliente.Salario" Locale="pt-BR" Placeholder="Salário" class="form-control half-width" />
        </div>

        <button type="submit" class="btn-salvar">Salvar</button>
    </EditForm>
</div>


@if (mensagem != null)
{
    <p class="msg-sucesso">@mensagem</p>
}

@code {
    private Cliente novoCliente = new();
    private string? mensagem;

    private async Task SalvarCliente()
    {
        await ClienteApiService.AddClienteAsync(novoCliente);
        mensagem = $"Cliente {novoCliente.Nome} cadastrado com sucesso!";
        novoCliente = new Cliente(); // reset
    }
}
